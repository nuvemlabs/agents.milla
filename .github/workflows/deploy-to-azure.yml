name: Deploy to Azure Web App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_WEBAPP_NAME: 'your-webapp-name'    # Set this to your Azure Web App name
  AZURE_WEBAPP_PACKAGE_PATH: '.'          # Path to your web app project
  DOTNET_VERSION: '7.0'                   # .NET version
  NODE_VERSION: '18.x'                    # Node.js version for React build

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: ClientApp/package-lock.json

    - name: Install Node.js dependencies
      run: |
        cd ClientApp
        npm ci

    - name: Build React application
      run: |
        cd ClientApp
        npm run build

    - name: Restore .NET dependencies
      run: dotnet restore

    - name: Build .NET application
      run: dotnet build --configuration Release --no-restore

    - name: Run .NET tests
      run: dotnet test --no-restore --verbosity normal

    - name: Publish .NET application
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    if: github.ref == 'refs/heads/main'

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: .net-app

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        slot-name: 'Production'
        package: .
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}